---
import { getCollection, type CollectionEntry } from "astro:content"
import DefaultPageLayout from "$/layouts/default.astro"
import Paginator from "$/components/Paginator.astro"
import ProjectPreviewList from "$components/preview/project/ProjectPreviewList.astro"
import { collectTags, includeTag, tagToSlug } from "$/utils/tag"
import { compareDateForSort } from "$/utils"
import { groupByLang } from "$/utils/i18n/collection"
import type { GetStaticPaths, Page } from "astro"
import { i18nPaginatePerLang } from "$/utils/i18n/routing/preview-list-page"

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const projects = await getCollection("project")
  const projectsByLang = groupByLang<"project">(projects)

  return [...projectsByLang].flatMap(([lang, projects]) => {
    const tags = collectTags(projects)
    return tags.flatMap((tag) => {
      const matchedProjects = projects.filter(includeTag(tag)).sort(compareDateForSort)
      return i18nPaginatePerLang(lang, matchedProjects, {
        paginate,
        props: { tagName: tag },
        params: { tag: tagToSlug(tag) }
      })
    })
  })
}

interface Props {
  page: Page<CollectionEntry<"project">>
  tagName: string
  lang: string
}

const { page, tagName, lang } = Astro.props
const { tag } = Astro.params

const i18nDescription = {
  ja: `${tagName}を扱った作品`,
  en: `Works using ${tagName}`
}
---

<DefaultPageLayout
  content={{
    title: tagName,
    description: i18nDescription[lang],
    ogimage: `/og-image/tags/${tag}.png`
  }}
  lang={lang}
>
  <ProjectPreviewList projects={page.data} lang={lang} />
  <Paginator page={page} />
</DefaultPageLayout>
